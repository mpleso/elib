// autogenerated: do not edit!
// generated from gentemplate [gentemplate -d Package=loop -id loopLogEvent -d Type=loopLogEvent github.com/platinasystems/elib/elog/event.tmpl]

package loop

import (
	"github.com/platinasystems/elib/elog"
)

var loopLogEventType = &elog.EventType{
	Name: "loop.loopLogEvent",
}

func init() {
	t := loopLogEventType
	t.Stringer = stringer_loopLogEvent
	t.Encode = encode_loopLogEvent
	t.Decode = decode_loopLogEvent
	elog.RegisterType(loopLogEventType)
}

func stringer_loopLogEvent(e *elog.Event) string {
	var x loopLogEvent
	x.Decode(e.Data[:])
	return x.String()
}

func encode_loopLogEvent(b []byte, e *elog.Event) int {
	var x loopLogEvent
	x.Decode(e.Data[:])
	return x.Encode(b)
}

func decode_loopLogEvent(b []byte, e *elog.Event) int {
	var x loopLogEvent
	x.Decode(b)
	return x.Encode(e.Data[:])
}

func (x loopLogEvent) Log() { x.Logb(elog.DefaultBuffer) }

func (x loopLogEvent) Logb(b *elog.Buffer) {
	e := b.Add(loopLogEventType)
	x.Encode(e.Data[:])
}
