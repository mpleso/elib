// autogenerated: do not edit!
// generated from gentemplate [gentemplate -d Package=event -id actor -d VecType=ActorVec -d Type=Actor github.com/platinasystems/elib/vec.tmpl]

package event

import (
	"github.com/platinasystems/elib"
)

type ActorVec []Actor

func (p *ActorVec) Resize(n uint) {
	c := elib.Index(cap(*p))
	l := elib.Index(len(*p)) + elib.Index(n)
	if l > c {
		c = elib.NextResizeCap(l)
		q := make([]Actor, l, c)
		copy(q, *p)
		*p = q
	}
	*p = (*p)[:l]
}

func (p *ActorVec) Validate(i uint) {
	c := elib.Index(cap(*p))
	l := elib.Index(i) + 1
	if l > c {
		c = elib.NextResizeCap(l)
		q := make([]Actor, l, c)
		copy(q, *p)
		*p = q
	}
	if l > elib.Index(len(*p)) {
		*p = (*p)[:l]
	}
}
