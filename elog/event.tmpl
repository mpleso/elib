{{/* -*- mode: Go -*- */}}

package {{.Package}}

import (
{{if ne .Package "elog"}}
	. "github.com/platinasystems/elib/elog"
{{end}}
)

var {{.Type}}Type = &EventType{
	Name: "{{.Package}}.{{.Type}}",
}

func init() {
	t := {{.Type}}Type
	t.Stringer = stringer_{{.Type}}
	t.Encode = encode_{{.Type}}
	t.Decode = decode_{{.Type}}
	RegisterType({{.Type}}Type)
}

func stringer_{{.Type}}(e *Event) string {
	var x {{.Type}}
	x.Decode(e.Data[:])
	return x.String()
}

func encode_{{.Type}}(b []byte, e *Event) int {
	var x {{.Type}}
	x.Decode(e.Data[:])
	return x.Encode(b)
}

func decode_{{.Type}}(b []byte, e *Event) int {
	var x {{.Type}}
	x.Decode(b)
	return x.Encode(e.Data[:])
}

func (x {{.Type}}) Log() {
	e := Add({{.Type}}Type)
	x.Encode(e.Data[:])
}
